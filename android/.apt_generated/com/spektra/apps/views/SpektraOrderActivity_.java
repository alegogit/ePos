//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.spektra.apps.views;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.googlecode.androidannotations.api.SdkVersionHelper;
import com.spektra.apps.R.id;
import com.spektra.apps.R.layout;
import com.spektra.apps.R.string;

public final class SpektraOrderActivity_
    extends SpektraOrderActivity
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.spektra_order_layout);
    }

    private void init_(Bundle savedInstanceState) {
        Resources resources_ = this.getResources();
        strCode = resources_.getString(string.order_kode);
        strMember = resources_.getString(string.order_identitas);
        strSummary = resources_.getString(string.order_ringkasan);
        strTenor = resources_.getString(string.order_tenor);
        strKtp = resources_.getString(string.order_ktp);
        strCanvas = resources_.getString(string.order_canvas);
        strSketch = resources_.getString(string.order_denah);
        strPromo = resources_.getString(string.promo_flayer);
        strCart = resources_.getString(string.order_belanja);
        strPurchase = resources_.getString(string.order_pembelian);
        strPayment = resources_.getString(string.order_pembayaran);
        strFoto = resources_.getString(string.order_foto);
        strFrom = resources_.getString(string.from);
        confirmCancel = resources_.getString(string.text_konfirmasi_batal);
        strWelcome = resources_.getString(string.welcome);
        strContact = resources_.getString(string.order_kontak);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        getWindow().setFlags(android.view.WindowManager.LayoutParams.FLAG_FULLSCREEN, android.view.WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }

    private void afterSetContentView_() {
        mFrame = ((FrameLayout) findViewById(id.left_selector_container));
        mNamecustomer = ((TextView) findViewById(id.name_customer));
        mDatacustomer = ((LinearLayout) findViewById(id.data_customer));
        mNameaddress = ((TextView) findViewById(id.name_address));
        mDoBack = ((Button) findViewById(id.doBack));
        {
            View view = findViewById(id.doBack);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        SpektraOrderActivity_.this.doBack();
                    }

                }
                );
            }
        }
        onCreateData();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, android.view.ViewGroup.LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    public static SpektraOrderActivity_.IntentBuilder_ intent(Context context) {
        return new SpektraOrderActivity_.IntentBuilder_(context);
    }

    @Override
    public void visibleFromCanvas() {
        handler_.postDelayed(new Runnable() {


            @Override
            public void run() {
                try {
                    SpektraOrderActivity_.super.visibleFromCanvas();
                } catch (RuntimeException e) {
                    Log.e("SpektraOrderActivity_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        , 100L);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        SpektraOrderActivity_.super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  1 :
                SpektraOrderActivity_.this.onResult(resultCode, data);
                break;
        }
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, SpektraOrderActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public SpektraOrderActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

    }

}
